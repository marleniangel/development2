{"ast":null,"code":"var _jsxFileName = \"/Users/marleniangel/CS1300/development/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport React, { useState } from \"react\";\nimport { sortBy } from \"lodash\";\nimport vinylData from \"./assets/vinyldata.json\";\nimport Vinyl from \"./components/vinyl\";\nimport Cart from \"./components/cart\";\nimport FilterButtons from \"./components/FilterButtons\";\nimport SortingButton from \"./components/SortingButton\";\n\n/* ####### DO NOT TOUCH -- this makes the image URLs work ####### */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvinylData.forEach(vinyl => {\n  vinyl.image = process.env.PUBLIC_URL + \"/\" + vinyl.image;\n});\n/* ############################################################## */\n\nfunction App() {\n  _s();\n  // TODO: use useState to create a state variable to hold the state of the cart\n  /* add your cart state code here */\n  const [cart, updateCart] = useState([]);\n  const [filteredVinyls, setFilteredVinyls] = useState(vinylData);\n  const [cartPrice, updateCartPrice] = useState(0.0);\n  const [selectedGenre, setSelectedGenre] = useState(\"All\");\n  const [selectedPrice, setSelectedPrice] = useState(\"All\");\n  const [isSorted, setIsSorted] = useState(false);\n  const handleGenreChange = genre => {\n    setSelectedGenre(genre);\n    filterVinyls(genre, selectedPrice);\n    setIsSorted(false);\n  };\n  const handlePriceChange = price => {\n    setSelectedPrice(price);\n    filterVinyls(selectedGenre, price);\n    setIsSorted(false);\n  };\n  const handleSortByPrice = () => {\n    if (!isSorted) {\n      sortVinyls();\n    }\n  };\n  const handleClearCart = () => {\n    updateCart([]);\n    updateCartPrice(0.0);\n  };\n  const filterVinyls = (genre, price) => {\n    let filteredVinyls = vinylData;\n    if (genre !== \"All\") {\n      filteredVinyls = filteredVinyls.filter(vinyl => vinyl.genre === genre);\n    }\n    if (price !== \"All\") {\n      const [minPrice, maxPrice] = price.split(\"-\").map(Number);\n      filteredVinyls = filteredVinyls.filter(vinyl => vinyl.price >= minPrice && vinyl.price <= maxPrice);\n    }\n    setFilteredVinyls(filteredVinyls);\n  };\n  const sortVinyls = () => {\n    const sortedResult = sortBy(filteredVinyls, 'price');\n    setFilteredVinyls(sortedResult);\n    setIsSorted(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FilterButtons, {\n      handleGenreChange: handleGenreChange,\n      handlePriceChange: handlePriceChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SortingButton, {\n      handleSortByPrice: handleSortByPrice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), filteredVinyls.map((vinyl, index) => /*#__PURE__*/_jsxDEV(Vinyl\n    // <li key={item.name}>{item.genre} - ${item.price} </li>\n    , {\n      name: vinyl.name,\n      genre: vinyl.genre,\n      price: vinyl.price,\n      image: vinyl.image,\n      updateCart: updateCart,\n      cart: cart,\n      updatePrice: updateCartPrice,\n      currPrice: cartPrice\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Cart, {\n          cartItems: cart,\n          cartPrice: cartPrice,\n          curPrice: cartPrice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cart-button\",\n          onClick: handleClearCart,\n          children: \"Clear Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"NXrQrJtGwdna1UqNV6xQ9Fn1VJw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","sortBy","vinylData","Vinyl","Cart","FilterButtons","SortingButton","jsxDEV","_jsxDEV","forEach","vinyl","image","process","env","PUBLIC_URL","App","_s","cart","updateCart","filteredVinyls","setFilteredVinyls","cartPrice","updateCartPrice","selectedGenre","setSelectedGenre","selectedPrice","setSelectedPrice","isSorted","setIsSorted","handleGenreChange","genre","filterVinyls","handlePriceChange","price","handleSortByPrice","sortVinyls","handleClearCart","filter","minPrice","maxPrice","split","map","Number","sortedResult","children","fileName","_jsxFileName","lineNumber","columnNumber","index","name","updatePrice","currPrice","cartItems","curPrice","className","onClick","_c","$RefreshReg$"],"sources":["/Users/marleniangel/CS1300/development/my-app/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport React, { useState } from \"react\";\nimport { sortBy } from \"lodash\";\nimport vinylData from \"./assets/vinyldata.json\";\nimport Vinyl from \"./components/vinyl\";\nimport Cart from \"./components/cart\";\nimport FilterButtons from \"./components/FilterButtons\";\nimport SortingButton from \"./components/SortingButton\";\n\n/* ####### DO NOT TOUCH -- this makes the image URLs work ####### */\nvinylData.forEach((vinyl) => {\n  vinyl.image = process.env.PUBLIC_URL + \"/\" + vinyl.image;\n});\n/* ############################################################## */\n\nfunction App() {\n  // TODO: use useState to create a state variable to hold the state of the cart\n  /* add your cart state code here */\n  const [cart, updateCart] = useState([]);\n  const [filteredVinyls, setFilteredVinyls] = useState(vinylData);\n  const [cartPrice, updateCartPrice] = useState(0.0);\n  const [selectedGenre, setSelectedGenre] = useState(\"All\");\n  const [selectedPrice, setSelectedPrice] = useState(\"All\");\n  const [isSorted, setIsSorted] = useState(false);\n\n  const handleGenreChange = (genre) => {\n    setSelectedGenre(genre);\n    filterVinyls(genre, selectedPrice);\n    setIsSorted(false);\n\n  };\n\n  const handlePriceChange = (price) => {\n    setSelectedPrice(price);\n    filterVinyls(selectedGenre, price);\n    setIsSorted(false);\n  };\n\n  const handleSortByPrice = () => {\n    if (!isSorted) {\n      sortVinyls();\n    }\n  };\n\n  const handleClearCart = () => {\n    updateCart([]);\n    updateCartPrice(0.0);\n  };\n\n\n  const filterVinyls = (genre, price) => {\n    let filteredVinyls = vinylData;\n  \n    if (genre !== \"All\") {\n      filteredVinyls = filteredVinyls.filter(\n        (vinyl) => vinyl.genre === genre\n      );\n    }\n  \n    if (price !== \"All\") {\n      const [minPrice, maxPrice] = price.split(\"-\").map(Number);\n      filteredVinyls = filteredVinyls.filter(\n        (vinyl) => vinyl.price >= minPrice && vinyl.price <= maxPrice\n      );\n    }\n  \n    setFilteredVinyls(filteredVinyls);\n  };\n\n  const sortVinyls = () => {\n    const sortedResult = sortBy(filteredVinyls, 'price');\n    setFilteredVinyls(sortedResult);\n    setIsSorted(true);\n  };\n\n  return (\n    <div>\n      <FilterButtons\n        handleGenreChange={handleGenreChange}\n        handlePriceChange={handlePriceChange}\n      />\n\n      {/* Sorting button */}\n      <SortingButton handleSortByPrice={handleSortByPrice} />\n\n      {filteredVinyls.map((vinyl, index) => (\n        <Vinyl\n          // <li key={item.name}>{item.genre} - ${item.price} </li>\n          key={index}\n          name={vinyl.name}\n          genre={vinyl.genre}\n          price={vinyl.price}\n          image={vinyl.image}\n          updateCart={updateCart}\n          cart={cart}\n          updatePrice={updateCartPrice}\n          currPrice={cartPrice}\n        />\n      ))}\n      <div>\n        <h2>Cart</h2>\n        {\n          <div>\n          <Cart cartItems={cart} cartPrice={cartPrice} curPrice={cartPrice} />\n          <button className=\"cart-button\" onClick={handleClearCart}>Clear Cart</button>\n          </div>\n\n        }\n      </div>\n    </div>\n  );\n}\n\n\n\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}