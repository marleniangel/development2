{"ast":null,"code":"var _jsxFileName = \"/Users/marleniangel/CS1300/development/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport vinylData from \"./assets/vinyldata.json\";\nimport Vinyl from \"./components/vinyl\";\nimport Cart from \"./components/cart\";\nimport FilterButtons from './components/FilterButtons';\nimport SortingButton from \"./components/SortingButton\";\n\n/* ####### DO NOT TOUCH -- this makes the image URLs work ####### */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvinylData.forEach(item => {\n  item.image = process.env.PUBLIC_URL + \"/\" + item.image;\n});\n/* ############################################################## */\n\nfunction App() {\n  _s();\n  // TODO: use useState to create a state variable to hold the state of the cart\n  /* add your cart state code here */\n  const [cart, updateCart] = useState([]);\n  const [items, setBooks] = useState(booksData);\n  const [cartPrice, updateCartPrice] = useState(0.0);\n  const [selectedGenre, setSelectedGenre] = useState('All');\n  const [selectedPrice, setSelectedPrice] = useState('All');\n  useEffect(() => {\n    filterVinyls();\n  }, [selectedGenre, selectedPrice]);\n  const handleGenreChange = genre => {\n    setSelectedGenre(genre);\n  };\n  const handlePriceChange = price => {\n    setSelectedPrice(price);\n  };\n  const handleSortByPrice = () => {\n    const sortedVinyls = [...items].sort((a, b) => a.price - b.price);\n    setBooks(sortedVinyls);\n  };\n  const filterVinyls = () => {\n    let filteredVinyls = vinylData;\n    if (selectedGenre !== 'All') {\n      filteredVinyls = filteredVinyls.filter(item => item.genre === selectedGenre);\n    }\n    if (selectedPrice !== 'All') {\n      const [minPrice, maxPrice] = selectedPrice.split('-').map(Number);\n      filteredVinyls = filteredVinyls.filter(item => item.price >= minPrice && item.price <= maxPrice);\n    }\n    return filteredVinyls;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FilterButtons, {\n      handleGenreChange: handleGenreChange,\n      handlePriceChange: handlePriceChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SortingButton, {\n      handleSortByPrice: handleSortByPrice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), filterVinyls().map(item => /*#__PURE__*/_jsxDEV(Vinyl\n    // <li key={item.name}>{item.genre} - ${item.price} </li>\n    , {\n      name: item.name,\n      genre: item.genre,\n      price: item.price,\n      image: item.image,\n      updateCart: updateCart,\n      cart: cart,\n      updatePrice: updateCartPrice,\n      currPrice: cartPrice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this),\n      /*#__PURE__*/\n      /* TODO: render a list of items in the cart */\n      _jsxDEV(Cart, {\n        cartItems: cart,\n        cartPrice: cartPrice,\n        curPrice: cartPrice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wmBXvnaEBon+PUekTAkjKRzQqiU=\");\n_c = App;\n{/* //   return (\n //     <div className=\"App\">\n //       <h1>My Bakery</h1> {/* TODO: personalize your bakery (if you want) */}\n//       {vinylData.map( */}\n//         (\n//           item,\n//           // index // TODO: map bakeryData to BakeryItem components\n//         ) => (\n//           <Vinyl  // replace with BakeryItem component\n//           name={item.name}\n//           price={item.price}\n//           description={item.description}\n//           image={item.image}\n//           updateCart={updateCart}\n//           cart={cart}\n//           updatePrice={updateCartPrice}\n//           currPrice={cartPrice}\n//           />\n//         )\n//       )}\n//       <div>\n//         <h2>Cart</h2>\n//         {\n//           /* TODO: render a list of items in the cart */\n//           <Cart cartItems={cart} cartPrice={cartPrice} curPrice={cartPrice}/>\n//         }\n//       </div>\n//     </div>\n//   );\n// }\n\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","vinylData","Vinyl","Cart","FilterButtons","SortingButton","jsxDEV","_jsxDEV","forEach","item","image","process","env","PUBLIC_URL","App","_s","cart","updateCart","items","setBooks","booksData","cartPrice","updateCartPrice","selectedGenre","setSelectedGenre","selectedPrice","setSelectedPrice","useEffect","filterVinyls","handleGenreChange","genre","handlePriceChange","price","handleSortByPrice","sortedVinyls","sort","a","b","filteredVinyls","filter","minPrice","maxPrice","split","map","Number","children","fileName","_jsxFileName","lineNumber","columnNumber","name","updatePrice","currPrice","cartItems","curPrice","_c","$RefreshReg$"],"sources":["/Users/marleniangel/CS1300/development/my-app/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { useState } from \"react\";\nimport vinylData from \"./assets/vinyldata.json\";\nimport Vinyl from \"./components/vinyl\";\nimport Cart from \"./components/cart\";\nimport FilterButtons from './components/FilterButtons';\nimport SortingButton from \"./components/SortingButton\";\n\n/* ####### DO NOT TOUCH -- this makes the image URLs work ####### */\nvinylData.forEach((item) => {\n  item.image = process.env.PUBLIC_URL + \"/\" + item.image;\n});\n/* ############################################################## */\n\nfunction App() {\n  // TODO: use useState to create a state variable to hold the state of the cart\n  /* add your cart state code here */\n  const [cart, updateCart] = useState([]);\n  const [items, setBooks] = useState(booksData);\n    const [cartPrice, updateCartPrice] = useState(0.0);\n    const [selectedGenre, setSelectedGenre] = useState('All');\n    const [selectedPrice, setSelectedPrice] = useState('All');\n\n    useEffect(() => {\n      filterVinyls();\n    }, [selectedGenre, selectedPrice]);\n\n    const handleGenreChange = (genre) => {\n      setSelectedGenre(genre);\n    };\n  \n    const handlePriceChange = (price) => {\n      setSelectedPrice(price);\n    };\n\n  const handleSortByPrice = () => {\n    const sortedVinyls = [...items].sort((a, b) => a.price - b.price);\n    setBooks(sortedVinyls);\n  };\n  \n\n\n  const filterVinyls = () => {\n    let filteredVinyls = vinylData;\n\n    if (selectedGenre !== 'All') {\n      filteredVinyls = filteredVinyls.filter(item => item.genre === selectedGenre);\n    }\n\n    if (selectedPrice !== 'All') {\n      const [minPrice, maxPrice] = selectedPrice.split('-').map(Number);\n      filteredVinyls = filteredVinyls.filter(item => item.price >= minPrice && item.price <= maxPrice);\n    }\n\n    return filteredVinyls;\n  };\n\n  return (\n    <div>\n      <FilterButtons \n        handleGenreChange={handleGenreChange} \n        handlePriceChange={handlePriceChange} \n      />\n      <SortingButton handleSortByPrice={handleSortByPrice} />\n\n      {/* Display filtered books */}\n        {filterVinyls().map((item,  ) => (\n          <Vinyl\n          // <li key={item.name}>{item.genre} - ${item.price} </li>\n          name={item.name}\n          genre={item.genre}\n          price={item.price}\n          image={item.image}\n          updateCart={updateCart}\n          cart={cart}\n          updatePrice={updateCartPrice}\n          currPrice={cartPrice}\n          />\n        )\n      )}\n      <div>\n        <h2>Cart</h2>\n        {\n          /* TODO: render a list of items in the cart */\n          <Cart cartItems={cart} cartPrice={cartPrice} curPrice={cartPrice}/>\n        }\n      </div>\n    </div>\n  );\n}\n\n  \n\n{/* //   return (\n//     <div className=\"App\">\n//       <h1>My Bakery</h1> {/* TODO: personalize your bakery (if you want) */}\n//       {vinylData.map( */}\n//         (\n//           item,\n//           // index // TODO: map bakeryData to BakeryItem components\n//         ) => (\n//           <Vinyl  // replace with BakeryItem component\n//           name={item.name}\n//           price={item.price}\n//           description={item.description}\n//           image={item.image}\n//           updateCart={updateCart}\n//           cart={cart}\n//           updatePrice={updateCartPrice}\n//           currPrice={cartPrice}\n//           />\n//         )\n//       )}\n//       <div>\n//         <h2>Cart</h2>\n//         {\n//           /* TODO: render a list of items in the cart */\n//           <Cart cartItems={cart} cartPrice={cartPrice} curPrice={cartPrice}/>\n//         }\n//       </div>\n//     </div>\n//   );\n// }\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}