{"ast":null,"code":"var _jsxFileName = \"/Users/marleniangel/CS1300/development/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport React, { useState, useEffect } from 'react';\nimport vinylData from \"./assets/vinyldata.json\";\nimport Vinyl from \"./components/vinyl\";\nimport Cart from \"./components/cart\";\nimport FilterButtons from \"./components/FilterButtons\";\nimport SortingButton from \"./components/SortingButton\";\n\n/* ####### DO NOT TOUCH -- this makes the image URLs work ####### */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvinylData.forEach(item => {\n  item.image = process.env.PUBLIC_URL + \"/\" + item.image;\n});\n/* ############################################################## */\n\nfunction App() {\n  _s();\n  // TODO: use useState to create a state variable to hold the state of the cart\n  /* add your cart state code here */\n  const [cart, updateCart] = useState([]);\n  const [vinyl, setVinyls] = useState(vinylData);\n  const [filteredVinyls, setFilteredVinyls] = useState([]);\n  const [cartPrice, updateCartPrice] = useState(0.0);\n  const [selectedGenre, setSelectedGenre] = useState(\"All\");\n  const [selectedPrice, setSelectedPrice] = useState(\"All\");\n  useEffect(() => {\n    filterVinyls();\n  }, [selectedGenre, selectedPrice]);\n  useEffect(() => {\n    sortVinyls(filteredVinyls);\n  }, [filteredVinyls]);\n  const handleGenreChange = genre => {\n    setSelectedGenre(genre);\n  };\n  const handlePriceChange = price => {\n    setSelectedPrice(price);\n  };\n  const filterVinyls = () => {\n    let filteredResult = vinylData;\n    if (selectedGenre !== \"All\") {\n      filteredResult = filteredResult.filter(vinyl => vinyl.genre === selectedGenre);\n    }\n    if (selectedPrice !== \"All\") {\n      const [minPrice, maxPrice] = selectedPrice.split(\"-\").map(Number);\n      filteredResult = filteredResult.filter(vinyl => vinyl.price >= minPrice && vinyl.price <= maxPrice);\n    }\n    console.log(filteredResult);\n    setFilteredVinyls(filteredResult);\n    // sortVinyls(filteredResult);\n  };\n  const sortVinyls = vinylsToSort => {\n    const sortedResult = [...vinylsToSort].sort((a, b) => a.price - b.price);\n    setVinyls(sortedResult);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FilterButtons, {\n      handleGenreChange: handleGenreChange,\n      handlePriceChange: handlePriceChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SortingButton, {\n      handleSortByPrice: () => sortVinyls(filteredVinyls)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), filterVinyls().map(item => /*#__PURE__*/_jsxDEV(Vinyl\n    // <li key={item.name}>{item.genre} - ${item.price} </li>\n    , {\n      name: item.name,\n      genre: item.genre,\n      price: item.price,\n      image: item.image,\n      updateCart: updateCart,\n      cart: cart,\n      updatePrice: updateCartPrice,\n      currPrice: cartPrice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this),\n      /*#__PURE__*/\n      /* TODO: render a list of items in the cart */\n      _jsxDEV(Cart, {\n        cartItems: cart,\n        cartPrice: cartPrice,\n        curPrice: cartPrice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bIsDnAjx3Gs97UbWy2HWf6DgWE0=\");\n_c = App;\n{\n  /* //   return (\n  //     <div className=\"App\">\n  //       <h1>My Bakery</h1> {/* TODO: personalize your bakery (if you want) */\n}\n//       {vinylData.map( */}\n//         (\n//           item,\n//           // index // TODO: map bakeryData to BakeryItem components\n//         ) => (\n//           <Vinyl  // replace with BakeryItem component\n//           name={item.name}\n//           price={item.price}\n//           description={item.description}\n//           image={item.image}\n//           updateCart={updateCart}\n//           cart={cart}\n//           updatePrice={updateCartPrice}\n//           currPrice={cartPrice}\n//           />\n//         )\n//       )}\n//       <div>\n//         <h2>Cart</h2>\n//         {\n//           /* TODO: render a list of items in the cart */\n//           <Cart cartItems={cart} cartPrice={cartPrice} curPrice={cartPrice}/>\n//         }\n//       </div>\n//     </div>\n//   );\n// }\n\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","vinylData","Vinyl","Cart","FilterButtons","SortingButton","jsxDEV","_jsxDEV","forEach","item","image","process","env","PUBLIC_URL","App","_s","cart","updateCart","vinyl","setVinyls","filteredVinyls","setFilteredVinyls","cartPrice","updateCartPrice","selectedGenre","setSelectedGenre","selectedPrice","setSelectedPrice","filterVinyls","sortVinyls","handleGenreChange","genre","handlePriceChange","price","filteredResult","filter","minPrice","maxPrice","split","map","Number","console","log","vinylsToSort","sortedResult","sort","a","b","children","fileName","_jsxFileName","lineNumber","columnNumber","handleSortByPrice","name","updatePrice","currPrice","cartItems","curPrice","_c","$RefreshReg$"],"sources":["/Users/marleniangel/CS1300/development/my-app/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport React, { useState, useEffect } from 'react';\nimport vinylData from \"./assets/vinyldata.json\";\nimport Vinyl from \"./components/vinyl\";\nimport Cart from \"./components/cart\";\nimport FilterButtons from \"./components/FilterButtons\";\nimport SortingButton from \"./components/SortingButton\";\n\n/* ####### DO NOT TOUCH -- this makes the image URLs work ####### */\nvinylData.forEach((item) => {\n  item.image = process.env.PUBLIC_URL + \"/\" + item.image;\n});\n/* ############################################################## */\n\nfunction App() {\n  // TODO: use useState to create a state variable to hold the state of the cart\n  /* add your cart state code here */\n  const [cart, updateCart] = useState([]);\n  const [vinyl, setVinyls] = useState(vinylData);\n  const [filteredVinyls, setFilteredVinyls] = useState([]);\n  const [cartPrice, updateCartPrice] = useState(0.0);\n  const [selectedGenre, setSelectedGenre] = useState(\"All\");\n  const [selectedPrice, setSelectedPrice] = useState(\"All\");\n\n  useEffect(() => {\n    filterVinyls();\n  }, [selectedGenre, selectedPrice]);\n\n  useEffect(() => {\n    sortVinyls(filteredVinyls);\n  }, [filteredVinyls]);\n\n  const handleGenreChange = (genre) => {\n    setSelectedGenre(genre);\n  };\n\n  const handlePriceChange = (price) => {\n    setSelectedPrice(price);\n  };\n\n  const filterVinyls = () => {\n    let filteredResult = vinylData;\n\n    if (selectedGenre !== \"All\") {\n      filteredResult = filteredResult.filter(\n        (vinyl) => vinyl.genre === selectedGenre\n      );\n    }\n\n    if (selectedPrice !== \"All\") {\n      const [minPrice, maxPrice] = selectedPrice.split(\"-\").map(Number);\n      filteredResult = filteredResult.filter(\n        (vinyl) => vinyl.price >= minPrice && vinyl.price <= maxPrice\n      );\n    }\n    console.log(filteredResult);\n    setFilteredVinyls(filteredResult);\n    // sortVinyls(filteredResult);\n  };\n\n  const sortVinyls = (vinylsToSort) => {\n    const sortedResult = [...vinylsToSort].sort((a, b) => a.price - b.price);\n    setVinyls(sortedResult);\n  };\n\n  return (\n    <div>\n      <FilterButtons\n        handleGenreChange={handleGenreChange}\n        handlePriceChange={handlePriceChange}\n      />\n      <SortingButton handleSortByPrice={() => sortVinyls(filteredVinyls)} />\n\n\n      {/* Display filtered books */}\n      {filterVinyls().map((item) => (\n        <Vinyl\n          // <li key={item.name}>{item.genre} - ${item.price} </li>\n          name={item.name}\n          genre={item.genre}\n          price={item.price}\n          image={item.image}\n          updateCart={updateCart}\n          cart={cart}\n          updatePrice={updateCartPrice}\n          currPrice={cartPrice}\n        />\n      ))}\n      <div>\n        <h2>Cart</h2>\n        {\n          /* TODO: render a list of items in the cart */\n          <Cart cartItems={cart} cartPrice={cartPrice} curPrice={cartPrice} />\n        }\n      </div>\n    </div>\n  );\n}\n\n{\n  /* //   return (\n//     <div className=\"App\">\n//       <h1>My Bakery</h1> {/* TODO: personalize your bakery (if you want) */\n}\n//       {vinylData.map( */}\n//         (\n//           item,\n//           // index // TODO: map bakeryData to BakeryItem components\n//         ) => (\n//           <Vinyl  // replace with BakeryItem component\n//           name={item.name}\n//           price={item.price}\n//           description={item.description}\n//           image={item.image}\n//           updateCart={updateCart}\n//           cart={cart}\n//           updatePrice={updateCartPrice}\n//           currPrice={cartPrice}\n//           />\n//         )\n//       )}\n//       <div>\n//         <h2>Cart</h2>\n//         {\n//           /* TODO: render a list of items in the cart */\n//           <Cart cartItems={cart} cartPrice={cartPrice} curPrice={cartPrice}/>\n//         }\n//       </div>\n//     </div>\n//   );\n// }\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}