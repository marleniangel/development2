{"ast":null,"code":"var _jsxFileName = \"/Users/marleniangel/CS1300/development/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport React, { useState, useEffect } from 'react';\nimport { sortBy } from 'lodash';\nimport vinylData from \"./assets/vinyldata.json\";\nimport Vinyl from \"./components/vinyl\";\nimport Cart from \"./components/cart\";\nimport FilterButtons from \"./components/FilterButtons\";\nimport SortingButton from \"./components/SortingButton\";\n\n/* ####### DO NOT TOUCH -- this makes the image URLs work ####### */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvinylData.forEach(vinyl => {\n  vinyl.image = process.env.PUBLIC_URL + \"/\" + vinyl.image;\n});\n/* ############################################################## */\n\nfunction App() {\n  _s();\n  // TODO: use useState to create a state variable to hold the state of the cart\n  /* add your cart state code here */\n  const [cart, updateCart] = useState([]);\n  // const [setVinyls] = useState(vinylData);\n  const [filteredVinyls, setFilteredVinyls] = useState(vinylData);\n  const [cartPrice, updateCartPrice] = useState(0.0);\n  const [selectedGenre, setSelectedGenre] = useState(\"All\");\n  const [selectedPrice, setSelectedPrice] = useState(\"All\");\n\n  // useEffect(() => {\n  //   filterVinyls();\n  // }, [selectedGenre, selectedPrice]);\n\n  // useEffect(() => {\n  //   // sortVinyls(filteredVinyls);\n  // }, [filteredVinyls]);\n\n  const handleGenreChange = genre => {\n    setSelectedGenre(genre);\n  };\n  const handlePriceChange = price => {\n    setSelectedPrice(price);\n    if (selectedPrice !== \"All\") {\n      const [minPrice, maxPrice] = selectedPrice.split(\"-\").map(Number);\n      filteredVinyls = filteredVinyls.filter(vinyl => vinyl.price >= minPrice && vinyl.price <= maxPrice);\n    }\n    return fil;\n  };\n  const handleSortByPrice = () => {\n    // const sortedResult = [...filteredVinyls].sort((a, b) => a.price - b.price);\n    const sortedResult = sortBy(filteredVinyls, 'price');\n    setFilteredVinyls(sortedResult);\n    return filteredVinyls;\n  };\n  const filterVinyls = () => {\n    let filteredVinyls = vinylData;\n    if (selectedGenre !== \"All\") {\n      filteredVinyls = filteredVinyls.filter(vinyl => vinyl.genre === selectedGenre);\n    }\n    if (selectedPrice !== \"All\") {\n      const [minPrice, maxPrice] = selectedPrice.split(\"-\").map(Number);\n      filteredVinyls = filteredVinyls.filter(vinyl => vinyl.price >= minPrice && vinyl.price <= maxPrice);\n    }\n    // const sortedResult = [...filteredResult].sort((a, b) => a.price - b.price);\n\n    // setFilteredVinyls(sortedResult);\n\n    // sortVinyls(filteredResult);\n    // setFilteredVinyls(filteredResult);\n    return filteredVinyls;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FilterButtons, {\n      handleGenreChange: handleGenreChange,\n      handlePriceChange: handlePriceChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SortingButton, {\n      handleSortByPrice: handleSortByPrice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredVinyls.map(Vinyl => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [Vinyl.genre, \" - $\", Vinyl.price, \" \"]\n      }, Vinyl.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this),\n      /*#__PURE__*/\n      /* TODO: render a list of items in the cart */\n      _jsxDEV(Cart, {\n        cartItems: cart,\n        cartPrice: cartPrice,\n        curPrice: cartPrice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Fs4pBTmAPFBVcKc2wW81ESH8EQo=\");\n_c = App;\n;\n\n// {\n/* //   return (\n//     <div className=\"App\">\n//       <h1>My Bakery</h1> {/* TODO: personalize your bakery (if you want) */\n// }\n//       {vinylData.map( */}\n//         (\n//           item,\n//           // index // TODO: map bakeryData to BakeryItem components\n//         ) => (\n//           <Vinyl  // replace with BakeryItem component\n//           name={item.name}\n//           price={item.price}\n//           description={item.description}\n//           image={item.image}\n//           updateCart={updateCart}\n//           cart={cart}\n//           updatePrice={updateCartPrice}\n//           currPrice={cartPrice}\n//           />\n//         )\n//       )}\n//       <div>\n//         <h2>Cart</h2>\n//         {\n//           /* TODO: render a list of items in the cart */\n//           <Cart cartItems={cart} cartPrice={cartPrice} curPrice={cartPrice}/>\n//         }\n//       </div>\n//     </div>\n//   );\n// }\n\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","sortBy","vinylData","Vinyl","Cart","FilterButtons","SortingButton","jsxDEV","_jsxDEV","forEach","vinyl","image","process","env","PUBLIC_URL","App","_s","cart","updateCart","filteredVinyls","setFilteredVinyls","cartPrice","updateCartPrice","selectedGenre","setSelectedGenre","selectedPrice","setSelectedPrice","handleGenreChange","genre","handlePriceChange","price","minPrice","maxPrice","split","map","Number","filter","fil","handleSortByPrice","sortedResult","filterVinyls","children","fileName","_jsxFileName","lineNumber","columnNumber","name","cartItems","curPrice","_c","$RefreshReg$"],"sources":["/Users/marleniangel/CS1300/development/my-app/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport React, { useState, useEffect } from 'react';\nimport { sortBy } from 'lodash';\nimport vinylData from \"./assets/vinyldata.json\";\nimport Vinyl from \"./components/vinyl\";\nimport Cart from \"./components/cart\";\nimport FilterButtons from \"./components/FilterButtons\";\nimport SortingButton from \"./components/SortingButton\";\n\n/* ####### DO NOT TOUCH -- this makes the image URLs work ####### */\nvinylData.forEach((vinyl) => {\n  vinyl.image = process.env.PUBLIC_URL + \"/\" + vinyl.image;\n});\n/* ############################################################## */\n\nfunction App() {\n  // TODO: use useState to create a state variable to hold the state of the cart\n  /* add your cart state code here */\n  const [cart, updateCart] = useState([]);\n  // const [setVinyls] = useState(vinylData);\n  const [filteredVinyls, setFilteredVinyls] = useState(vinylData);\n  const [cartPrice, updateCartPrice] = useState(0.0);\n  const [selectedGenre, setSelectedGenre] = useState(\"All\");\n  const [selectedPrice, setSelectedPrice] = useState(\"All\");\n\n  // useEffect(() => {\n  //   filterVinyls();\n  // }, [selectedGenre, selectedPrice]);\n\n  // useEffect(() => {\n  //   // sortVinyls(filteredVinyls);\n  // }, [filteredVinyls]);\n\n  const handleGenreChange = (genre) => {\n    setSelectedGenre(genre);\n  };\n\n  const handlePriceChange = (price) => {\n    setSelectedPrice(price);\n    if (selectedPrice !== \"All\") {\n      const [minPrice, maxPrice] = selectedPrice.split(\"-\").map(Number);\n      filteredVinyls = filteredVinyls.filter(\n        (vinyl) => vinyl.price >= minPrice && vinyl.price <= maxPrice\n      );\n    }\n    return fil\n  };\n\n  const handleSortByPrice = () => {\n    // const sortedResult = [...filteredVinyls].sort((a, b) => a.price - b.price);\n    const sortedResult = sortBy(filteredVinyls, 'price');\n    setFilteredVinyls(sortedResult);\n    return filteredVinyls\n  };\n\n\n  const filterVinyls = () => {\n    let filteredVinyls = vinylData;\n\n    if (selectedGenre !== \"All\") {\n      filteredVinyls = filteredVinyls.filter(\n        (vinyl) => vinyl.genre === selectedGenre\n      );\n    }\n\n    if (selectedPrice !== \"All\") {\n      const [minPrice, maxPrice] = selectedPrice.split(\"-\").map(Number);\n      filteredVinyls = filteredVinyls.filter(\n        (vinyl) => vinyl.price >= minPrice && vinyl.price <= maxPrice\n      );\n    }\n    // const sortedResult = [...filteredResult].sort((a, b) => a.price - b.price);\n\n    // setFilteredVinyls(sortedResult);\n  \n\n    // sortVinyls(filteredResult);\n    // setFilteredVinyls(filteredResult);\n    return filteredVinyls\n   \n    \n  };\n\n  \n\n  \n\n \n\n\n\n  return (\n    <div>\n      <FilterButtons\n        handleGenreChange={handleGenreChange}\n        handlePriceChange={handlePriceChange}\n      />\n\n       {/* Sorting button */}\n       <SortingButton handleSortByPrice={handleSortByPrice} />\n\n\n      {/* Display filtered books */}\n      {/* Display sorted and filtered books */}\n      <ul>\n        {filteredVinyls.map(Vinyl => (\n          <li key={Vinyl.name}>{Vinyl.genre} - ${Vinyl.price} </li>\n        ))}\n      </ul>\n      {/* {filterVinyls().map((vinyl) => (\n        <Vinyl\n          // <li key={item.name}>{item.genre} - ${item.price} </li>\n          name={vinyl.name}\n          genre={vinyl.genre}\n          price={vinyl.price}\n          image={vinyl.image}\n          updateCart={updateCart}\n          cart={cart}\n          updatePrice={updateCartPrice}\n          currPrice={cartPrice}\n        />\n      ))} */}\n      <div>\n        <h2>Cart</h2>\n        {\n          /* TODO: render a list of items in the cart */\n          <Cart cartItems={cart} cartPrice={cartPrice} curPrice={cartPrice} />\n        }\n      </div>\n    </div>\n  );\n      };\n\n\n// {\n  /* //   return (\n//     <div className=\"App\">\n//       <h1>My Bakery</h1> {/* TODO: personalize your bakery (if you want) */\n// }\n//       {vinylData.map( */}\n//         (\n//           item,\n//           // index // TODO: map bakeryData to BakeryItem components\n//         ) => (\n//           <Vinyl  // replace with BakeryItem component\n//           name={item.name}\n//           price={item.price}\n//           description={item.description}\n//           image={item.image}\n//           updateCart={updateCart}\n//           cart={cart}\n//           updatePrice={updateCartPrice}\n//           currPrice={cartPrice}\n//           />\n//         )\n//       )}\n//       <div>\n//         <h2>Cart</h2>\n//         {\n//           /* TODO: render a list of items in the cart */\n//           <Cart cartItems={cart} cartPrice={cartPrice} curPrice={cartPrice}/>\n//         }\n//       </div>\n//     </div>\n//   );\n// }\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}